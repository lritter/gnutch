<?xml version="1.0"?>
<!--
 Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->
<!-- Imported by contrib build.xml files to define default targets. -->
<project>

  <property name="name" value="${ant.project.name}"/>
  <property name="root" value="${basedir}"/>

  <!-- load contrib-specific properties first -->
  <property file="${user.home}/${name}.build.properties" />
  <property file="${root}/build.properties" />

  <property name="nutch.root" location="${root}/../../../"/>

  <property name="src.dir" location="${root}/src/java"/>
  <property name="src.test" location="${root}/src/test"/>

  <available file="${src.test}" type="dir" property="test.available"/>

  <property name="conf.dir" location="${nutch.root}/conf"/>

  <property name="build.dir" location="${nutch.root}/build/${name}"/>
  <property name="build.classes" location="${build.dir}/classes"/>
  <property name="build.test" location="${build.dir}/test"/>

  <property name="deploy.dir" location="${nutch.root}/build/contrib/${name}"/>

  <!-- load nutch defaults last so that they can be overridden above -->
  <property file="${nutch.root}/default.properties" />
  <fileset id="lib.jars" dir="${root}" includes="lib/*.jar"/>

  <path id="contrib.deps"/>

  <!-- the normal classpath -->
  <path id="classpath">
    <pathelement location="${build.classes}"/>
    <fileset refid="lib.jars"/>
    <pathelement location="${nutch.root}/build/classes"/>
    <fileset dir="${nutch.root}/lib">
      <include name="*.jar" />
    </fileset>
    <path refid="contrib.deps"/>
  </path>

  <!-- the unit test classpath -->
  <path id="test.classpath">
    <pathelement location="${build.test}" />
    <pathelement location="${nutch.root}/build/test/classes"/>
    <pathelement location="${nutch.root}/src/test"/>
    <pathelement location="${conf.dir}"/>
    <pathelement location="${nutch.root}/build"/>
    <path refid="classpath"/>
  </path>

  <!-- ====================================================== -->
  <!-- Stuff needed by all targets                            -->
  <!-- ====================================================== -->
  <target name="init">
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${build.classes}"/>
    <mkdir dir="${build.test}"/>

    <antcall target="init-contrib"/>
  </target>

  <!-- to be overridden by sub-projects --> 
  <target name="init-contrib"/>

  <!--
   ! Used to build contrib compilation dependencies
   ! (to be overridden by contribs)
   !-->
  <target name="deps-jar"/>

  <!--
   ! Used to deploy contrib runtime dependencies
   ! (to be overridden by contribs)
   !-->
  <target name="deps-test"/>

  <!-- ====================================================== -->
  <!-- Compile the Java files                                 -->
  <!-- ====================================================== -->
  <target name="compile" depends="init,deps-jar">
    <echo message="Compiling contrib: ${name}"/>
    <javac 
     encoding="${build.encoding}" 
     srcdir="${src.dir}"
     includes="**/*.java"
     destdir="${build.classes}"
     debug="${javac.debug}"
     optimize="${javac.optimize}"
     target="${javac.version}"
     source="${javac.version}"
     deprecation="${javac.deprecation}">
      <classpath refid="classpath"/>
    </javac>
  </target>

  <target name="compile-core">
    <ant target="compile-core" inheritall="false" dir="${nutch.root}"/>
    <ant target="compile"/>
  </target>
  
  <!-- ================================================================== -->
  <!-- Make contrib .jar                                                  -->
  <!-- ================================================================== -->
  <!--                                                                    -->
  <!-- ================================================================== -->
  <target name="jar" depends="compile">
    <jar
      jarfile="${build.dir}/${name}.jar"
      basedir="${build.classes}"
    />
  </target>

  <target name="jar-core" depends="compile-core">
    <jar
        jarfile="${build.dir}/${name}.jar"
        basedir="${build.classes}"
        />
  </target>

  <!-- ================================================================== -->
  <!-- Deploy contrib to ${deploy.dir}                                    -->
  <!-- ================================================================== -->
  <!--                                                                    -->
  <!-- ================================================================== -->
  <target name="deploy" depends="jar, deps-test">
    <mkdir dir="${deploy.dir}"/>
    <copy file="contrib.xml" todir="${deploy.dir}" 
          preservelastmodified="true"/>
    <available property="lib-available"
                 file="${build.dir}/${name}.jar"/>
    <antcall target="copy-generated-lib"/>
    <copy todir="${deploy.dir}" flatten="true">
      <fileset refid="lib.jars"/>
    </copy>
  </target>
	
  <target name="copy-generated-lib" if="lib-available">
    <copy file="${build.dir}/${name}.jar" todir="${deploy.dir}" failonerror="false"/>
  </target>

  <!-- ================================================================== -->
  <!-- Clean.  Delete the build files, and their directories              -->
  <!-- ================================================================== -->
  <target name="clean">
    <delete dir="${build.dir}"/>
    <delete dir="${deploy.dir}"/>
  </target>

</project>
